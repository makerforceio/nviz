// Code generated by go-bindata.
// sources:
// frontend/css/main.css
// frontend/index.html
// frontend/js/graph.js
// frontend/js/main.js
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _frontendCssMainCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x41\x0e\x83\x20\x10\x45\xd7\x72\x8a\xb9\x00\x84\x9a\xb6\x0b\x7a\x1a\x94\x11\x26\x41\x20\x74\xa2\xb5\xa6\x77\x6f\xd4\x76\xe3\xf6\xbf\xf7\x5f\x97\xdd\x02\xab\x00\xc8\x13\xd6\x21\xe6\x59\xbe\x0c\x04\x72\x0e\xd3\x43\x7c\x84\x50\x58\x72\x1f\x60\x15\xcd\x90\x13\xcb\x27\xbd\xd1\xc0\x45\xdd\x70\xdc\xf0\x41\x65\xb4\xd5\xe3\xc9\x69\x0f\x43\xa8\xae\xda\xe4\x4e\xf0\xba\xc1\x66\xb4\xd5\x53\x92\x9c\x8b\x01\xa9\x55\xbb\x47\x7f\x1a\x2f\x11\x0d\x10\xdb\x48\xfd\x7f\x9c\x91\x7c\x60\x03\xad\xd6\x47\x3a\x60\x2c\xa7\xb2\x56\xf7\xbd\x32\x61\x65\xea\x6d\x94\x36\x92\x4f\x06\x38\x97\xfd\x23\xbe\x01\x00\x00\xff\xff\x68\xd2\xc7\x8b\xf1\x00\x00\x00")

func frontendCssMainCssBytes() ([]byte, error) {
	return bindataRead(
		_frontendCssMainCss,
		"frontend/css/main.css",
	)
}

func frontendCssMainCss() (*asset, error) {
	bytes, err := frontendCssMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/css/main.css", size: 241, mode: os.FileMode(420), modTime: time.Unix(1511271233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x39\xdb\x72\xdb\xb6\xb6\xcf\xf2\x57\x20\xec\x9c\x71\x32\x09\x48\xca\x96\x9d\xc4\x87\x54\xc7\x8d\x2f\x71\x9c\x38\xa7\x71\xd2\x93\xf4\x65\x0f\x48\x2e\x91\x90\x40\x80\x01\x40\xc9\x8a\xdb\x7f\xdf\x03\x80\xa2\xa8\x8b\x1d\x37\xd3\xee\xd9\x2f\x12\xb9\xb0\xb0\xee\x37\x80\xd1\xa3\x93\xf7\xaf\x3e\x7e\xf9\xbf\x53\x54\xe8\x92\x0d\x77\xa2\xc5\x1f\x90\x6c\xb8\xd3\x8b\x1e\x61\x8c\x3e\xc0\xd7\x9a\x4a\xc8\x50\x09\x9a\x20\x4d\x72\x85\x30\x36\x8b\xf6\x3d\x2d\x88\x54\xa0\x63\xaf\xd6\x23\xfc\xc2\x6b\xe1\x9c\x94\x10\x7b\x53\x0a\xb3\x4a\x48\xed\xa1\x54\x70\x0d\x5c\xc7\xde\x8c\x66\xba\x88\x33\x98\xd2\x14\xb0\x7d\x79\x86\x28\xa7\x9a\x12\x86\x55\x4a\x18\xc4\xfd\x67\x48\x15\x92\xf2\x09\xd6\x02\x8f\xa8\x8e\xb9\xf0\x86\x3b\x3b\xbd\x88\x51\x3e\x41\x12\x58\xec\x29\x3d\x67\xa0\x0a\x00\xed\xa1\x42\xc2\x28\xf6\x0a\xad\x2b\x75\x14\x04\x25\xb9\x49\x33\xee\x27\x42\x68\xa5\x25\xa9\xcc\x4b\x2a\xca\xa0\x05\x04\x03\x3f\xf4\x43\x9c\x80\x26\x41\xaa\xd4\x72\xc1\x2f\x29\xf7\x53\xa5\x3c\x44\xb9\x86\x5c\x52\x3d\x8f\x3d\x55\x90\xfd\x17\x03\x1c\x7c\x39\xac\x4e\x0e\xcf\x7e\x0b\x7e\x9b\xee\xbd\x7e\xc3\x8f\x0f\xf5\xd3\xa9\x62\x9f\x0e\x47\xb3\x2f\x9f\xc7\xaf\xce\x74\x7a\x5a\xbd\x4e\xae\xde\x84\x6c\x7e\x7c\xa6\x3e\x7f\x54\xe3\x5f\x92\x11\x39\x19\x7f\x3b\x7e\x0b\xbf\xaa\xab\xc3\x77\x1e\x4a\xa5\x50\x4a\x48\x9a\x53\x1e\x7b\x84\x0b\x3e\x2f\x45\xad\xbc\xe1\x0e\x42\x08\x39\xcd\x56\x15\xa9\x15\xf8\x23\xc1\x35\x99\x81\x12\x25\x58\x25\x24\x30\x20\x0a\x54\x30\x3d\xf0\x43\xbf\x6f\xe5\x27\x8c\x39\xa9\xd7\x0d\x33\x5c\x58\x6c\x95\xae\xa1\xa9\xfc\x5c\x88\x9c\x01\xa9\xa8\xb2\x84\x53\xa5\x7e\x1e\x91\x92\xb2\x79\xfc\x41\x24\x42\x8b\xa3\x41\x18\x3e\x7b\x1e\x86\xcf\x5e\x84\xe1\x3d\xa4\x37\x9c\xa1\xe7\x15\xc4\x9e\x86\x1b\x1d\x58\xa1\x1c\x6f\x23\x67\x49\x1a\xf3\x0e\x77\xa2\xc0\xc5\x57\x94\x88\x6c\x8e\x52\x46\x94\x8a\xbd\x24\xc7\x8c\xe6\x85\x23\x9e\xd1\x29\xa2\x59\xec\x91\xaa\xf2\x16\x08\x19\xe6\x82\x83\x8b\x84\x76\x9d\x7a\x68\x8a\xe9\xc8\x45\x5a\x1c\xef\x12\xba\x6b\x31\x7a\x11\x27\xd3\xc5\x4e\x4e\xa6\x09\x91\xc8\xfd\x39\x2e\xa8\xc3\x6e\xa7\xd7\xeb\x45\x35\x5b\xc5\xc6\x9c\x4c\x8d\x28\x66\x8d\xd1\xce\x1a\xa6\x1a\x4a\x44\x52\x4d\xa7\xd0\x20\xf4\x22\xd2\x28\xfa\xd3\xa3\xa0\x95\x37\xd1\x1c\x25\x9a\x63\x63\xa8\x05\x62\x2f\x4a\x68\x3e\x8c\x5a\x7a\x23\xa2\xd0\x88\x60\x22\xa5\x98\x61\x06\x23\xed\x21\x22\x29\xc1\x05\xcd\x32\xe0\xb1\xa7\x65\x0d\xde\x30\x0a\xe8\x30\x0a\xcc\xce\x86\x5d\x40\x1a\xc9\x02\x46\xed\x53\x14\xd4\xac\x51\xc4\x98\x66\x55\x13\xe3\x0d\x54\x4a\x4c\x6a\x2d\x50\xc9\xec\xff\x42\xb5\x8c\x4e\x87\xa7\x95\x48\x8b\xa3\x28\x30\xcf\x2d\x74\x69\xf5\x84\x89\x74\x82\x32\x5c\x3a\x07\x20\x30\xe8\xde\xf0\xf6\x16\x8d\x84\x2c\x89\xb6\xdb\x1f\x5b\xe8\x13\xf4\xe7\x9f\x77\xd2\xb1\x9b\x2d\x19\x47\xd1\xee\x70\xbf\x98\x11\x99\xc3\x43\x68\x36\x4f\x7f\x83\xcb\x92\x5a\x6b\xc1\xb7\x3a\xab\x89\x62\x87\xb1\x74\xdd\xba\xd7\xd2\x02\xa6\x52\x70\x9c\x89\x3a\x61\x70\xbf\xfb\x16\x8e\x73\x34\x7f\x5c\x86\xad\xe1\x53\x31\x32\x7f\x60\xe0\xfc\x23\xfc\x95\x16\xd5\x7f\x88\xff\x77\x7c\x20\x6d\x4a\xff\x15\x27\x6c\xa6\x50\x14\x70\xe2\x42\xac\x1b\xbf\xa6\x7f\x11\xca\x41\xe2\x11\xab\x69\xe6\x24\xea\x22\x48\x31\x43\x15\x1e\x34\xf5\x64\x6d\x2f\x43\xa9\x60\x58\x95\x0d\x46\xa3\x4b\x99\xa3\x29\x1e\x09\x19\x7b\x8f\x69\x49\x72\x78\x86\x68\xf6\x04\x51\x8e\xec\x9b\x32\xa5\x2d\xa1\x3c\x3b\x52\x32\x8d\xbd\xdd\x8c\x68\x72\xb4\x8b\x9e\xba\x55\xdf\xd8\x07\x3d\x45\xbb\xff\x9b\x10\x05\x87\x83\x67\xcb\x95\x5a\xb2\xb6\x08\xd1\x32\x77\x02\x23\x29\x6a\x9e\x99\x2e\x7e\xe3\x0a\x41\x93\x86\x8b\x84\x59\xe6\xd5\xba\xe8\xb8\xbf\xd7\x48\x8f\x0f\x8c\xfc\x28\x25\x32\x6b\x95\x28\x0e\x86\x57\xa4\x84\x28\x28\x0e\x5a\x50\xbf\x4d\x7a\xaa\x4c\x6c\x1a\x9d\x6f\x6f\xed\x48\x60\x93\xb9\xe8\x77\x76\x7f\x94\x84\x72\xca\x73\xf4\x56\x28\xd5\x25\x93\x12\x3e\x25\x6a\x41\x8a\x09\xa5\x5e\x15\xc4\x8c\x12\x6e\x82\xf0\xf6\xf7\x42\x0f\x15\x60\x3c\x1e\x7b\x2f\x42\xe3\x62\xb7\x65\x41\xa0\x5a\xec\x35\x05\x10\x2b\x48\x05\xcf\x88\x9c\xb7\xc1\xd4\x56\x1b\xc3\xf9\xb1\x6e\xe4\xf8\x97\xe1\x64\x8a\xce\x22\x5a\xaa\x8e\xb0\xd7\x9a\xe8\x15\x21\x97\x35\x68\x95\x09\x62\x54\x69\x5c\x73\xdb\x1b\xb3\x65\xfc\x32\xda\xba\x7c\x4a\x58\x0d\xcf\xac\x55\xac\xd3\x95\xa1\xdd\x62\xf6\x96\x06\x3b\x42\xb7\xb7\xc8\x62\xb7\x52\x75\x5b\xce\xb2\xe1\x90\x2c\x07\x64\x7f\x71\x45\x19\x6b\x1e\x97\x32\x15\xc0\x2a\x6f\xf8\x73\xdb\x3e\x3a\xd1\xdf\xca\x66\x7a\xe9\xfb\x64\x0c\xa9\xf6\x27\x30\x57\x8f\xad\x54\xe8\x8f\x3f\xd0\xed\x9f\x4f\x7c\x06\x3c\xd7\x05\x8a\xe3\x18\x85\x4b\x49\x4d\x61\xdf\xa4\xe7\xf2\xa9\xb5\xdc\xb1\xcc\xeb\x12\xf8\x3f\x66\x3d\x22\xf3\xff\x3e\xe3\x19\xa1\xfe\x06\xdb\x7d\xfa\x74\x71\xd2\x35\xdb\x03\x02\xbb\x36\x29\xbf\x11\xc3\xdd\xee\xb9\x68\xa9\x2d\x6c\xf9\xb0\x98\xae\x28\xcf\xe0\x66\x6d\xc0\xb2\x30\x33\x63\xf5\x7e\x60\xc8\x7a\xd8\x6c\x82\xac\x5a\x29\x70\x0d\xd2\xdb\x9c\x24\x12\x49\x78\xe6\x0d\xf9\x94\x7e\x5b\x9b\x35\x86\x04\x71\xa8\x25\x61\x88\x83\x9e\x09\x39\x41\x53\xaa\x6a\xc2\xa8\x22\x9a\x0a\x8e\x46\x92\x94\x60\xe0\xdb\xe6\x89\xa6\xec\xf7\x7a\xeb\x85\x9f\xc8\x0c\x67\x90\x4e\x6c\xed\x5e\xc4\x9f\xa9\xf6\x36\xea\x24\x99\xff\x3f\xd5\xc5\x71\x96\x99\xbf\xeb\x8a\x51\xfd\xd8\xda\xe8\x49\xd3\x22\x34\x94\x15\x23\x1a\x16\x3b\x09\x35\x1b\xa5\x98\x6d\xed\x14\xa6\xb4\x36\x06\x27\x14\xc5\x31\xda\x25\x59\xb6\xdb\x56\xdb\x75\xb9\xec\x00\x9d\xe1\x11\x83\x1b\x44\x18\xcd\xb9\x1d\x75\x14\x56\x5a\x82\x36\x53\xda\xce\x7a\xc0\x3f\x0a\x32\x91\x4e\x40\x06\x1c\x66\x1e\xb2\x09\xd6\x9c\xc9\x8e\x50\x3f\x0c\xff\xa7\x33\x6e\x6f\x50\x75\x2e\x41\xe3\x5a\x69\x3a\x9a\xe3\xe6\x48\xb7\xea\xa9\x6d\x4d\xba\x62\xb5\xfa\x4e\x53\x5e\xce\xb4\xbd\xae\x53\xef\xea\x4a\x44\x66\x88\xf2\x29\x55\x34\x61\x60\x0c\x06\x4c\x41\xd7\x6a\xed\xe2\xfd\xb6\xf3\x86\x5c\x54\xf0\x40\x8e\x0b\x3e\xdd\xfe\xdd\x25\x68\x7a\xad\x9d\x84\x16\xfe\xf3\x19\x51\xba\xae\x32\xa2\xc1\x76\xe6\xbb\x1a\xfa\x26\xe6\xd6\xee\xbe\x05\xcd\xb4\xfa\xfb\xf5\x5b\x98\xb7\x18\xac\x2c\x6a\xaa\x19\xb8\x44\xd3\xb2\xe6\x29\xd1\xb0\x52\x3d\x09\xf5\x9b\x02\xda\xfa\xa7\x18\x2c\x89\x1d\xae\x10\x53\x75\xe2\xe8\x95\x09\xde\x73\x44\xcb\x5a\x43\xb6\x46\x7f\xa1\xbd\xc5\xb5\xf6\xa9\xed\x24\xe5\xd8\x35\x15\x2b\x0a\x8a\xc3\x4e\xd4\x76\xd9\xb8\xb9\xb0\x21\xe2\xc2\x79\xf7\xa7\x47\x01\xa1\x41\x63\x1d\x47\xee\x7d\x05\xbc\x5b\xa5\x37\x89\x38\xb9\x32\xc2\x73\x90\x5e\x9b\x18\x86\xb4\xe0\x47\x29\xa3\xe9\xc4\xaf\x24\x4c\xed\x75\x05\xa1\x27\xc0\x40\xc3\xe3\x86\xfe\x13\x6f\xe8\x00\xdf\x0b\xd8\x28\x58\x64\xfe\x0f\x54\x59\x97\xa3\x1c\x66\x3f\x78\x9a\xfd\xe1\x42\xfb\xa1\xe6\x88\xf0\xf5\x32\x4a\xb9\xd2\x84\xa7\xb0\xd2\x38\x7a\x77\xcf\xca\x2b\x25\x73\x63\x52\xee\xcc\x8f\x91\x19\xc0\x36\xa3\xd6\x79\x42\xd5\x49\x49\x75\xec\x39\x63\x5c\xc1\xec\xda\x02\xb6\x05\xbc\x21\x83\x73\x29\xea\xaa\x33\x2c\x90\x04\x18\xb2\x35\xd7\x51\xc0\x2e\x09\x87\xaf\x16\xa3\x3c\xba\x30\x80\x28\xb0\x98\xcb\x23\x06\xaf\x6a\xdd\xb9\xc8\xf0\x56\x98\x98\xa2\x27\x05\xf3\x9a\x0b\xae\x15\xca\xd6\x9d\xab\x10\x5b\xf4\x32\x50\xa9\xa4\x09\x64\xc9\x7c\x75\x1d\xdb\xa1\x02\x55\x8c\xa4\x50\x08\x96\x81\x8c\x3d\x05\x72\x0a\x72\x06\x5c\x67\x62\xc6\x03\x0d\x4a\x63\x42\x71\x59\xab\x65\x86\x46\xaa\x24\x8c\x6d\xb0\x6b\xc8\x75\xc5\xb5\x6e\x5f\x66\xa4\x37\x3c\xb1\xf8\xee\xa4\x80\xb4\x40\xb2\xe6\x51\x60\xc9\x6d\x46\xf3\xa6\x89\xd3\x02\xd2\xc9\xba\x89\x37\x10\xb0\x85\x77\x1b\x42\xc7\xa4\x16\x23\x11\x37\xde\x96\x7d\x16\x6f\xcd\xb4\xaa\x10\x35\xcb\xaa\x9a\x75\x08\x1e\xb3\x19\x99\x2b\x64\x80\x4e\x93\x9f\x97\x33\x54\xc7\x97\xf7\xaa\xf2\xdd\x68\x71\x13\xe5\xb1\xcc\xd5\xdf\x11\x21\x96\x5a\xd7\x63\x0e\x70\x67\x7c\x98\xe5\x6d\xe1\x81\xb1\xbd\x15\x89\xfb\x61\x88\x30\x66\x32\x0e\xfd\x30\xec\x23\x8c\x25\xf0\x0c\x24\x76\x63\x66\xb3\xac\xc8\x14\x30\x35\xe9\x3d\x25\x2c\xee\xbf\x08\xc3\x7b\x42\xa8\xc3\xf1\xde\x08\x6a\x27\x79\x13\x3e\xb5\x82\x87\x85\x4f\x25\x45\x2e\x41\xa9\x45\xa1\x6b\x2b\x5c\x2a\x81\x68\xca\xf3\xa5\x64\x5b\x76\x61\x53\xf1\xba\x2f\x66\xc2\xa1\x15\x64\xab\x40\xc2\x69\x49\x8c\x90\x48\x0a\xd3\x62\x16\x8b\x09\x91\x8d\xa9\xed\x49\x80\x8b\x59\xec\xf5\xc3\xb0\x0b\x2b\x29\x8f\xbd\x55\x08\xb9\x69\xb0\xb6\x4c\x49\xc3\x15\x3d\xbb\xcf\xcd\x9d\x86\x8b\x0e\x57\xc2\x36\xae\x04\x55\x9d\xa6\x1d\x5b\x3c\xba\xdb\x18\xd7\x9a\x48\xbd\xfd\xf2\xa4\x63\xa6\x52\xe3\x7d\x44\x18\x48\xed\x7e\xdb\xde\xe6\xcc\x60\x61\x1b\x86\x07\x29\x85\xec\x9e\x19\x56\x57\x3a\xa7\x87\xed\x1e\xdd\x60\x4a\xf9\x48\xdc\xcf\xd2\x1c\x26\x6b\xb5\x95\xa7\x5b\xda\xc6\x34\x0a\x4c\x1c\x0e\xb7\x1e\x5a\x76\x36\x1a\xab\xfb\x66\x11\x99\x84\xaa\x34\xb2\x83\x56\x10\xa4\x22\x03\x7f\xfc\xb5\x06\x39\xb7\xd7\xdd\xee\x11\xef\xfb\x7b\x7e\xdf\x57\x8c\x96\xf6\xee\x7f\xbc\xf5\xea\xff\xf2\xcd\xbe\xd8\x3b\xb9\xd4\x17\x93\xe9\x97\x8b\xcb\xfd\x4f\xa7\x57\xdf\xca\x77\xcf\x2f\x5f\x4d\x3e\xc8\x40\x9e\xbe\x0c\x7e\xad\xf2\x43\x72\xfc\xfb\xf9\x9b\xd9\xd9\xc9\xbb\xdf\xae\x8e\x83\xf3\xea\xfc\xec\xec\xe5\x7e\xf1\xb9\x3a\x3f\xb8\x9c\x5c\xdd\x7d\xf5\x1f\x05\x4e\x4a\x23\xf4\x9a\xbc\x19\x1f\x2b\x3f\x65\xa2\xce\x46\x8c\x48\x77\xf9\x4f\xc6\xe4\x26\x60\x34\x51\x41\x25\xaa\x0a\xa4\x3f\x56\x41\xdf\xef\xf7\xfd\x30\xa8\xcb\x6c\x01\xbc\x5b\x91\x24\xf8\x74\x38\xaf\xe8\x2f\xa7\xaf\xab\xf7\xa3\x60\xf0\xb4\xcf\xbf\x9d\x55\xf2\x60\x9f\xdf\x5c\x5f\x3f\x3d\x7f\xfb\x6a\x32\x9a\xfd\x92\x9d\x5d\x7d\xbc\xd1\x29\xfb\xfa\x15\xf8\xc5\xf5\x68\x76\xfc\xad\xba\x24\xef\xae\xce\xae\xca\xf1\xe0\x47\x14\xf9\x4b\x5f\x63\xc6\xeb\x1f\x63\xb6\xeb\x51\x84\xc7\x09\xfd\x9c\x16\x83\xdf\x4f\xc4\x73\x5d\xbd\x2c\x2e\x7f\x1f\x7c\x54\xaf\x13\x1a\x0e\x9e\x5f\xc9\xcb\xf3\xb7\xef\xf7\xaf\x4f\xdf\x1c\xe7\x83\x83\xf1\xe7\x1b\x7e\x7e\x31\xfa\xf2\x6d\x32\xb8\xa6\x2f\xc3\x0f\x27\x17\x5f\xaf\xca\xfe\x03\xf4\x68\x3e\x70\xfd\x25\xa7\xd8\xcb\x29\xe3\x93\x3d\xff\xb9\x1f\x36\xaf\x49\xcd\x33\x06\x46\x91\x7b\x8c\x54\xf3\x6a\x92\x5b\x6a\x53\x77\x28\xda\x8e\x38\x56\x41\x2e\x49\x55\xdc\x4b\x6d\xdc\x7c\x68\x59\xc5\x89\x02\x33\x56\xd9\x0f\x2f\xf6\xfb\xde\xce\xbf\x03\x00\x00\xff\xff\x46\x02\x3d\x10\xf8\x1b\x00\x00")

func frontendIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_frontendIndexHtml,
		"frontend/index.html",
	)
}

func frontendIndexHtml() (*asset, error) {
	bytes, err := frontendIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/index.html", size: 7160, mode: os.FileMode(420), modTime: time.Unix(1513044495, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendJsGraphJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xdf\x6b\xdb\x3e\x10\xc0\x9f\xed\xbf\xe2\xc8\xf7\x21\x09\x35\x26\x09\xdf\x32\xa6\x90\x87\xae\x85\xfd\x60\x30\x58\x07\x7b\x08\x79\x50\xac\x73\x22\xa6\x4a\x9e\x74\xee\x12\x4c\xfe\xf7\x21\xb9\x76\xe7\xd9\x2e\x9d\xc0\xb6\x74\xf7\xb9\x3b\x9d\xac\xbb\x47\x6e\x41\x19\xe7\x6e\x8f\xdc\xd2\x3a\xf6\xcb\x4c\xd3\x3a\x0e\xb3\x83\xe5\xc5\xf1\xa3\x96\x04\x1b\xc8\x4b\x9d\x91\x34\x1a\x66\x73\xa8\x62\x00\x80\xc0\xd2\x09\x36\x20\x4c\x56\x3e\xa0\xa6\xf4\x67\x89\xf6\x7c\x8f\x0a\x33\x32\x76\x36\x49\x5b\xcf\x93\x79\x7a\x40\xba\x35\x9a\xf0\x44\xb3\xe9\x4a\x4c\xe7\xeb\xd6\x89\xe0\xc4\x61\x53\x3b\xf5\x43\xf1\x3d\x2a\xc7\x60\xbb\x4b\x5a\x99\x67\x1c\x92\x97\xb6\x32\x3f\xaa\xce\xaa\xb5\x66\x30\xf9\x6c\x9c\x9b\x24\x3d\x75\x2e\x95\xd7\xe6\x5c\x39\x1c\x50\x2b\xa9\xf1\x1b\x6a\x27\x8d\x66\xb0\xe8\xeb\xf7\x3c\xfb\x71\xb0\xa6\xd4\xe2\xd6\x28\x63\x19\x4c\xec\x61\xcf\x67\x6f\xae\x93\xe5\xdb\x55\x78\x16\xe9\xff\xf3\x01\xc7\x7b\x63\x05\xda\x31\xa3\xe5\x0b\x26\xbc\xb8\xa7\xb3\x42\x06\xd3\x7d\x49\x34\x1d\xe3\xee\xb8\x3b\x32\xd8\x2e\x76\x2f\x01\x5f\xf2\xdc\x21\x31\x58\xa4\x43\xb9\x05\xec\x93\x91\xba\x09\xf8\x20\x09\xed\x40\xc4\xc2\x48\x4d\xef\xfe\x3d\xa3\xda\xae\x77\x84\xff\xe5\x79\x3e\x4a\x87\x28\xdf\xa5\xa0\x23\x83\xe5\x08\xf4\xc1\x3c\xa2\xfd\xca\x85\x2c\x1d\x83\xeb\x97\xa0\x7e\xf0\xd7\x6f\xbc\x76\xd0\xcf\x7a\xb5\x5a\x24\xcd\xf3\x2a\xeb\xa7\x6c\x56\x23\x64\x93\xc8\x68\xb6\xf2\x19\x19\xf8\x8d\xbe\x54\xba\xc5\xd3\x0c\x57\x70\xfd\x9e\x17\x8e\x41\xb8\xfe\x5d\xe0\xd2\xae\x76\x61\x76\x59\xc7\xe1\xdb\xd6\x30\x6c\x40\xe3\x2f\x08\xf3\x59\x46\xa7\xe4\x8f\xe2\xa3\x73\xe1\xef\x8b\xaf\x9e\x69\xb7\x68\x59\x78\x3f\xcb\x4c\xe1\xbb\x88\x63\x50\xc5\x51\x14\x71\x2d\x1f\xb8\x17\xdc\x13\xfa\x7d\x2d\xaf\x13\x2f\x76\x19\x57\xd8\x30\xd1\xe9\xe6\xe4\x17\xdb\x4a\x48\x57\x28\x7e\x7e\xda\xfe\x65\x17\xd8\xe8\x3c\xa6\xf6\xda\x4b\x60\xc8\x18\x45\xd2\x07\xa8\x50\xf3\xbd\x42\xd1\x40\x09\x28\x3c\xa0\x16\x0c\xfe\x36\x8f\xa3\xa8\x3e\x92\xcb\x7c\x1d\xfb\xc3\x78\x6e\x89\x37\x42\xdc\x71\xe2\xe1\x67\x74\x5a\xa3\x4f\x75\x5e\x75\x8f\x2d\xf5\xc2\xb4\xe9\x5f\xdb\xc5\xae\x16\x14\xa5\x3b\xd6\xfc\x7a\x88\xaf\x7b\x60\x4d\x65\x9a\x7a\x50\x59\x08\x4e\x38\x7b\x92\x87\x57\xa6\xe9\xea\xaa\xde\xea\xef\x00\x00\x00\xff\xff\x82\x21\x6f\x75\xd6\x05\x00\x00")

func frontendJsGraphJsBytes() ([]byte, error) {
	return bindataRead(
		_frontendJsGraphJs,
		"frontend/js/graph.js",
	)
}

func frontendJsGraphJs() (*asset, error) {
	bytes, err := frontendJsGraphJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/js/graph.js", size: 1494, mode: os.FileMode(420), modTime: time.Unix(1510893662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendJsMainJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x6d\x6b\x1b\xb9\x13\x7f\xbd\xfb\x29\xa6\x14\xba\x5a\xfe\xfe\xcb\x49\x0a\x77\x9c\xdb\x2d\x94\x26\xe5\x72\x94\xb4\xe0\xb4\x7d\x11\xcc\xa1\xec\x8e\xbd\xaa\xd7\xd2\x9e\xa4\x8d\xcf\x04\x7f\xf7\x63\xa4\x7d\xf0\x53\x4a\x39\x28\xdc\x9b\x58\xfb\x9b\xd1\x68\x34\x0f\xbf\x51\xe2\xf1\x18\xae\x95\x74\x52\x54\xd2\x0a\x27\xb5\x8a\xe3\x5c\x2b\xeb\x40\xd4\x35\x64\xa0\x70\x0d\x5f\x1a\x64\x8f\x71\x84\xd5\x04\x92\xe7\xa2\xae\x93\x51\x1c\x15\xc2\x89\x09\x3c\xc6\x51\xf4\x20\x71\x3d\x81\x44\xaa\x02\xff\x26\x49\xa4\xc4\x0a\x27\x90\xbc\xa6\xdf\x37\x1e\x69\x1a\x59\x10\x42\xbf\x01\x71\x46\x48\x25\xd5\xe2\xcf\x4a\x5b\x4b\xa2\x3d\x20\xe8\x60\xad\xf3\x92\x64\x7e\x11\x30\xeb\x84\xb3\x13\x78\xdc\xd2\x87\x30\x8b\x7e\x2d\x57\x62\x81\xc3\x17\x39\xd3\x7d\x14\x3a\x5f\xa2\x51\xb8\xce\x0d\x0a\x27\xd5\x62\x02\x73\x51\x59\xdc\x93\xa1\x31\xda\x4c\x40\x35\x55\xb5\x87\xd3\x81\x8d\xed\x05\x64\x70\x85\xae\xd4\x85\x0d\xb7\xaf\x2b\xb1\x79\x57\xc9\x7c\x39\x01\x96\x42\xf6\x06\x1e\xa1\x87\x58\x0a\xde\x81\x5a\x34\x16\x0f\x95\x7a\xac\xd3\xb2\x4e\xd7\x07\x4a\x3d\xd4\xe9\xdc\x8b\x7c\xb9\x16\xa6\x38\xd0\xf3\xb2\xb9\x36\xa7\x45\x14\x29\x79\x89\x15\x3a\x9c\x00\xa3\x1c\x04\x59\x1c\x45\xd1\x1c\x5d\x5e\xb2\x84\xf3\xb1\xa8\xe5\x58\xc8\x71\x02\xff\x03\x52\x19\x05\x79\x7b\xd9\x09\x24\x97\x57\x1f\xae\x6e\xaf\x7c\x12\xa2\x6d\xca\x5d\x89\x8a\xb9\xd2\xe8\xf5\xf5\xfc\x46\xbb\x8f\xcb\x16\xd2\xbd\xe9\x6d\xca\x73\x41\xd6\xb1\x87\x22\xaa\x2c\x5d\x21\xf7\xd1\x66\x98\x06\xbd\x38\x8a\x82\x9b\x21\xea\x37\xb8\x9e\x36\xf7\x2b\xe9\x26\xc0\x70\x70\x15\x79\x6d\xf0\x01\x95\xbb\xc4\xb9\x68\x2a\xc7\xfc\x6e\x51\xd7\xfc\x28\xc1\x90\x81\x33\x0d\x1e\xc9\x43\x32\x21\x83\xe4\x5d\xa7\x99\x6b\xe5\x84\x54\x68\x38\xe7\x49\xdc\xba\xe8\x60\xae\xcd\xaa\xad\xfe\xf7\xda\xac\x2e\x85\x13\x0c\xb9\x13\x66\x81\x2e\x1d\xd4\xa8\x0b\x20\xf3\xda\xb7\xfa\x8f\xe9\xc7\x1b\x46\xcb\xf4\x38\xb2\xc1\x85\xe4\x28\xaa\x9f\x3e\xdf\x86\x90\x46\xf7\xba\xd8\x4c\xbc\xc1\x1f\x0f\x71\x34\x1e\x83\x58\x0b\xe9\xe0\x06\xd7\xe0\x83\xe3\x61\xff\xe7\x89\x9b\x7f\x15\xd2\x5f\x7c\xae\xcd\x70\x79\x70\x1a\xac\x13\xc6\x75\x51\x38\x95\xbc\xa7\x42\xed\x9b\xe9\x3b\x47\x52\xeb\x1c\x8b\x7d\x09\x40\x06\xc8\x9d\x9e\x3a\x23\xd5\x82\x1d\x96\x83\x30\x46\x6c\xbe\x4a\x57\xbe\x2d\x0a\xfa\x99\xd6\x95\x2f\x0a\x61\xcc\x08\x54\xf6\x72\xa8\x8d\x0a\x1d\x08\x63\xce\x21\x83\xbb\xd9\x0e\x70\xd1\x03\x74\x5d\x46\xe8\x12\x37\x20\x15\x09\xd3\xee\x5e\xc6\x5c\xf0\xba\xb1\x25\xfb\x78\xff\x0d\x73\xc7\x85\xb5\x72\xa1\x58\x90\xb6\xe4\xb5\xc4\x4d\xc8\xd3\x76\x44\x7b\xef\x96\xb8\x99\xa5\xde\xe1\x48\xce\xbd\x4b\x17\xbc\x42\xb5\x70\x25\xbc\xc9\x40\x75\xb6\xc9\xf8\x79\x30\x4e\x2a\x69\x0f\x0e\x9e\x45\xdb\xb8\xfb\x33\x78\x92\x88\xa2\x48\xbc\xf6\xba\x94\x15\xee\x1f\xf0\x7a\xb0\xbf\xb3\x43\xaa\x07\x69\xe5\x7d\x85\x61\x5f\x67\xf0\xf0\xf4\xbd\xb3\x0d\xba\xc6\xf8\x60\x9c\xf7\x51\xa7\x0a\x16\xee\x2a\x90\xaf\x4f\xff\x6e\x8a\x78\x2d\x8a\x29\x55\x0a\xfb\x6d\x04\xc9\x59\x92\xf2\x95\xaf\x93\x31\x7f\x3c\x1f\xbd\xdc\x8e\x17\x29\xff\xa6\xa5\x62\xc9\x28\x49\x47\xbd\xb5\x0f\x9e\xe5\x2b\x32\x56\x71\xa7\x3f\x19\xcc\xa5\x95\x5a\xb1\x5f\xd3\x40\xaa\xdb\xb4\x1b\x3b\x43\x2f\xb5\x8d\xd5\x26\x99\x72\x67\xd0\x36\x95\x83\x0c\x1e\xb7\xf1\x90\x51\x54\xce\x6c\x40\xcf\xbd\x36\xa7\x2f\x89\x96\xa5\x21\x44\x61\xcb\x9d\xd7\xb9\x3b\x9b\xcd\xa8\xe2\xfc\xfa\x7c\x16\x53\x8c\xda\x08\xd0\x79\xdc\xfa\x3b\xca\xf9\x86\x85\x5d\x69\xbc\xed\xbc\xda\x6d\x43\x32\xd1\x3a\x45\xa9\x47\xae\x97\xdd\x59\xde\x16\xf2\x6f\x56\x2b\xaa\xe6\x6d\x1c\xf9\x8d\x70\x15\xf8\x8e\x87\x9e\xf0\x76\x0f\x99\x37\x79\xba\xe1\x03\xcb\xf8\x03\xa9\x85\xfc\x70\x83\xcc\x73\x45\x7c\xd0\xa8\x87\x04\x3b\xc4\xd5\x96\x7a\x7d\xdd\xee\x64\xe9\x8e\x39\x9a\xdf\x44\x0c\x61\x80\x0f\x57\xa6\x0d\x6f\x25\x64\x7e\x1c\xec\xe8\x87\x4f\x8f\xc6\xa7\xe7\x47\xa7\xf5\x43\x37\xf2\x36\xe9\xa9\xd0\xde\xc8\xaf\x5b\x98\x06\x7c\x07\xd3\xba\x85\xf7\xde\x0a\x9d\xbc\x12\xd6\x35\x75\x21\x1c\xee\xcb\xdb\x3d\xfe\x0d\x71\x42\xd7\xe3\xad\x8e\x7f\x5c\x9c\xd0\xf1\x78\xab\x13\xde\x19\xc7\x4a\x01\x8f\x5b\xad\x2e\xa6\x42\x26\x04\x8d\xc7\xe0\x8c\x58\xc8\x9c\xc6\x3c\xba\x5b\xb9\x42\xdd\x38\xc6\x06\x02\x5b\x18\x51\x97\xf4\x0e\x63\x81\xfe\xe0\xe2\x2c\x7d\x15\x9f\xa0\xe1\x13\x13\x74\x2d\x55\xa1\xd7\xbc\xd2\xb9\x7f\xbf\xf1\x52\x58\xba\x69\x92\xd0\xfe\xfd\x7c\x5e\x76\x03\xf6\xa9\x22\xe8\xe9\x79\xa7\x10\xf2\x12\xf3\xe5\xef\xc1\x68\xbf\x89\x1a\xcf\x77\x7e\x68\x02\xe6\xd7\x90\xc1\x29\x67\x5a\x8a\x48\x9e\x3f\xf3\x15\x92\xa6\xf0\xe2\x45\xd8\xdc\x2f\xba\xa2\xce\xe0\x2c\xf4\x52\xa8\x3e\x76\xd2\x9c\xad\x64\x8e\xec\x17\xa2\xdf\x2d\x60\x65\x11\xc8\x85\xd3\x61\xc8\x80\x8e\x0d\xd7\x1a\xd3\xbd\x06\xf3\x7d\x30\xd8\x60\xa8\x93\xf9\x4e\x09\x2d\x4c\x71\xe8\x22\xc0\xd2\xb8\x3d\x46\x14\xc5\x15\xcd\xdb\x0f\xd2\x3a\x54\x68\x58\x42\xe7\xe5\xa5\x50\x0b\x4c\x46\x43\xcc\x46\x61\x3c\xa6\x31\x3d\xb4\xa7\xce\xa0\x58\x85\x41\x6d\xfb\xbc\x04\x30\x3c\x36\xbc\xcd\xa9\x6e\x4c\x8e\x7d\x57\x05\x85\x24\x8d\xe3\xb0\x3a\x71\xf6\x0d\xae\x93\xd1\xce\x6b\x29\x58\xd6\x90\x05\x62\xab\x85\xb1\xc8\x90\x53\xcd\xa6\xf1\xfe\xdb\x45\x7b\xb4\x03\xdb\xe6\xd6\x3c\xb4\xf7\x97\x06\xb9\x45\xc7\x7a\xda\x19\xb5\x8f\xc3\x60\x69\xfb\x3d\x9f\x3e\xfb\xbe\xf8\x29\x6e\xf9\x89\xdb\xb9\x74\x47\xd8\x2c\xed\xb9\x64\x07\xdc\xe9\xcf\xb6\x63\x5f\x79\x52\xee\xf6\x7b\xb3\xcf\x02\x97\xed\x52\xb8\x57\x7a\x92\x69\x0e\xe8\xe5\x88\x5d\x5a\x4a\x39\x62\x94\x40\x23\xf1\x2e\x1b\xf8\xb6\x7f\x5b\x14\xf4\xbe\xac\xb5\x54\x8e\x1d\x9f\xf0\x43\x61\xbe\x26\xfa\xf9\xaf\xc4\xda\x73\xe1\xbf\x0b\x78\xa0\xd1\x3b\x1f\x05\x59\xcc\x86\x29\xf7\x9d\x08\x84\x7f\x6d\x7e\x5a\xfd\x17\xde\xfc\x61\x0b\x84\xac\x8c\xc7\xf0\x5e\x2a\x51\x81\x75\x58\xdb\x38\x2e\x74\xde\xac\x50\x39\xfe\x57\x83\x66\x33\xc5\x0a\x73\xa7\x0d\x0b\xff\x35\xa7\x3c\xaf\x84\xb5\xe4\x38\x37\xb8\xd2\x0f\xc8\x92\xe2\xff\x4a\x2b\x7a\xb1\xfd\x13\x00\x00\xff\xff\x14\x1d\xc1\xff\x88\x0f\x00\x00")

func frontendJsMainJsBytes() ([]byte, error) {
	return bindataRead(
		_frontendJsMainJs,
		"frontend/js/main.js",
	)
}

func frontendJsMainJs() (*asset, error) {
	bytes, err := frontendJsMainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/js/main.js", size: 3976, mode: os.FileMode(420), modTime: time.Unix(1512150035, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"frontend/css/main.css": frontendCssMainCss,
	"frontend/index.html":   frontendIndexHtml,
	"frontend/js/graph.js":  frontendJsGraphJs,
	"frontend/js/main.js":   frontendJsMainJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"frontend": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{frontendCssMainCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{frontendIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"graph.js": &bintree{frontendJsGraphJs, map[string]*bintree{}},
			"main.js":  &bintree{frontendJsMainJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
